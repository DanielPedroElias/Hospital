/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Tela;

import Persistencia.EnderecoPersistencia;
import Persistencia.PacientePersistencia;
import Persistencia.PlanoPersistencia;
import entidades.Endereco;
import entidades.Paciente;
import entidades.Plano;
import java.sql.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author d4nny
 */
public class TelaPaciente extends javax.swing.JFrame {

    /**
     * Creates new form TelaPaciente
     */
    public TelaPaciente() {
        setTitle("Paciente");
        initComponents();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButtonSalva = new javax.swing.JButton();
        jButtonRecupera = new javax.swing.JButton();
        jButtonAtualizar = new javax.swing.JButton();
        Excluir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtIdEndereco = new javax.swing.JTextField();
        txtCpf = new javax.swing.JTextField();
        txtNomePlano = new javax.swing.JTextField();
        txtData = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonSalva.setText("Salvar");
        jButtonSalva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvaActionPerformed(evt);
            }
        });

        jButtonRecupera.setText("Recuperar");
        jButtonRecupera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRecuperaActionPerformed(evt);
            }
        });

        jButtonAtualizar.setText("Atualizar");
        jButtonAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAtualizarActionPerformed(evt);
            }
        });

        Excluir.setText("Excluir");
        Excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExcluirActionPerformed(evt);
            }
        });

        jLabel1.setText("Nome:");

        jLabel2.setText("Data de Nascimento:");

        jLabel3.setText("Id do endere√ßo:");

        jLabel4.setText("CPF:");

        jLabel5.setText("Nome do Plano:");

        txtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeActionPerformed(evt);
            }
        });

        txtIdEndereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdEnderecoActionPerformed(evt);
            }
        });

        txtCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCpfActionPerformed(evt);
            }
        });

        txtNomePlano.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomePlanoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Excluir))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3))
                        .addGap(0, 26, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtIdEndereco, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
                    .addComponent(txtCpf, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtNomePlano, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtNome)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonAtualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonRecupera)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSalva)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtData))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtIdEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtNomePlano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSalva, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Excluir, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonRecupera, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSalvaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvaActionPerformed
        // TODO add your handling code here:
        // Extrair os valores dos campos de texto
        String nome = txtNome.getText();
        String cpf = txtCpf.getText();
        Date dataNascimento = (Date) txtData.getValue();
        String nomePlano = txtNomePlano.getText();
        int idEndereco = Integer.parseInt(txtIdEndereco.getText());

        // Recuperar o endere√ßo do banco de dados pelo ID
        Endereco endereco = EnderecoPersistencia.recuperar(idEndereco);
        if (endereco == null) {
            // Se o endere√ßo n√£o foi encontrado, exibir uma mensagem de erro
            JOptionPane.showMessageDialog(this, "Endere√ßo n√£o encontrado.", "Erro", JOptionPane.ERROR_MESSAGE);
            return; // Encerrar o m√©todo aqui para evitar exce√ß√µes
        }

        // Recuperar o plano do banco de dados pelo nome
        Plano plano = PlanoPersistencia.recuperar(nomePlano);
        if (plano == null) {
            // Se o plano n√£o foi encontrado, exibir uma mensagem de erro
            JOptionPane.showMessageDialog(this, "Plano n√£o encontrado.", "Erro", JOptionPane.ERROR_MESSAGE);
            return; // Encerrar o m√©todo aqui para evitar exce√ß√µes
        }

        // Criar um novo objeto Paciente com os valores dos campos de texto
        Paciente paciente = new Paciente(nome, dataNascimento, endereco, cpf, plano);

        try {
            // Tentar salvar o paciente no banco de dados
            PacientePersistencia.salvar(paciente);
            // Se n√£o houver exce√ß√£o, o salvamento foi bem-sucedido
            JOptionPane.showMessageDialog(this, "Paciente salvo com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            // Se uma exce√ß√£o for lan√ßada, exibir mensagem de erro
            JOptionPane.showMessageDialog(this, "Erro ao salvar o paciente: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonSalvaActionPerformed

    private void jButtonRecuperaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRecuperaActionPerformed
        // TODO add your handling code here:
        // Extrair o CPF do campo de texto
        String cpf = txtCpf.getText();

        // Tentar recuperar o paciente do banco de dados pelo CPF
        Paciente paciente = PacientePersistencia.recuperar(cpf);

        // Verificar se o paciente foi encontrado
        if (paciente != null) {
            // Se o paciente foi encontrado, exibir os dados na interface
            txtNome.setText(paciente.getNome());
            txtData.setValue(paciente.getDataNascimento());
            txtCpf.setText(paciente.getCpf());
            txtNomePlano.setText(paciente.getPlano().getNome());
            txtIdEndereco.setText(String.valueOf(paciente.getEndereco().getId()));

            JOptionPane.showMessageDialog(this, "Paciente recuperado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Se o paciente n√£o foi encontrado, exibir uma mensagem de erro
            JOptionPane.showMessageDialog(this, "Paciente n√£o encontrado.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonRecuperaActionPerformed

    private void jButtonAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAtualizarActionPerformed
        // TODO add your handling code here:
        // Extrair os novos valores dos campos de texto
        String novoNome = txtNome.getText();
        Date novaDataNascimento = (Date) txtData.getValue(); // Supondo que voc√™ est√° usando um componente JFormattedTextField para a data
        String novoCpf = txtCpf.getText();
        String novoNomePlano = txtNomePlano.getText();
        int novoIdEndereco = Integer.parseInt(txtIdEndereco.getText()); // Supondo que voc√™ tem um campo para o ID do novo endere√ßo

// Tentar recuperar o paciente do banco de dados pelo CPF
        Paciente paciente = PacientePersistencia.recuperar(novoCpf);

// Verificar se o paciente foi encontrado
        if (paciente != null) {
            // Se o paciente foi encontrado, atualizar os valores e tentar atualizar no banco de dados
            paciente.setNome(novoNome);
            paciente.setDataNascimento(novaDataNascimento);
            paciente.getPlano().setNome(novoNomePlano);

            // Recuperar o novo endere√ßo do banco de dados
            Endereco novoEndereco = EnderecoPersistencia.recuperar(novoIdEndereco);
            // Verificar se o novo endere√ßo foi encontrado
            if (novoEndereco != null) {
                // Associar o novo endere√ßo ao paciente
                paciente.setEndereco(novoEndereco);
            } else {
                // Se o novo endere√ßo n√£o foi encontrado, exibir uma mensagem de erro
                JOptionPane.showMessageDialog(this, "Endere√ßo n√£o encontrado.", "Erro", JOptionPane.ERROR_MESSAGE);
                return; // Abortar a atualiza√ß√£o do paciente
            }

            // Tentar atualizar o paciente no banco de dados
            PacientePersistencia.atualizar(paciente);

            JOptionPane.showMessageDialog(this, "Paciente atualizado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Se o paciente n√£o foi encontrado, exibir uma mensagem de erro
            JOptionPane.showMessageDialog(this, "Paciente n√£o encontrado.", "Erro", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButtonAtualizarActionPerformed

    private void ExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExcluirActionPerformed
        // TODO add your handling code here:
        // Extrair o CPF do paciente a ser exclu√≠do
        String cpf = txtCpf.getText();

        // Tentar recuperar o paciente do banco de dados pelo CPF
        Paciente paciente = PacientePersistencia.recuperar(cpf);

        // Verificar se o paciente foi encontrado
        if (paciente != null) {
            // Se o paciente foi encontrado, tentar excluir do banco de dados
            PacientePersistencia.excluir(cpf);
            JOptionPane.showMessageDialog(this, "Paciente exclu√≠do com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Se o paciente n√£o foi encontrado, exibir uma mensagem de erro
            JOptionPane.showMessageDialog(this, "Paciente n√£o encontrado.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ExcluirActionPerformed

    private void txtCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCpfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCpfActionPerformed

    private void txtNomePlanoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomePlanoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomePlanoActionPerformed

    private void txtNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeActionPerformed

    private void txtIdEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdEnderecoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdEnderecoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPaciente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Excluir;
    private javax.swing.JButton jButtonAtualizar;
    private javax.swing.JButton jButtonRecupera;
    private javax.swing.JButton jButtonSalva;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtCpf;
    private javax.swing.JFormattedTextField txtData;
    private javax.swing.JTextField txtIdEndereco;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtNomePlano;
    // End of variables declaration//GEN-END:variables
}
